
package mx.com.sky.sel.proxyclients.ejb.replicareventosom;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150616.1732
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "ReplicatorWSService", targetNamespace = "http://ws.eventos.servicios.sky.com.mx/",
                  wsdlLocation =
                  "https://preselsoa.sky.com.mx:443/ReplicarEventosOM/ReplicatorWSPort?WSDL#%7Bhttp%3A%2F%2Fws.eventos.servicios.sky.com.mx%2F%7DReplicatorWSService")
public class ReplicatorWSService extends Service {

    private final static URL REPLICATORWSSERVICE_WSDL_LOCATION;
    private final static WebServiceException REPLICATORWSSERVICE_EXCEPTION;
    private final static QName REPLICATORWSSERVICE_QNAME =
        new QName("http://ws.eventos.servicios.sky.com.mx/", "ReplicatorWSService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url =
                new URL("https://preselsoa.sky.com.mx:443/ReplicarEventosOM/ReplicatorWSPort?WSDL#%7Bhttp%3A%2F%2Fws.eventos.servicios.sky.com.mx%2F%7DReplicatorWSService");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        REPLICATORWSSERVICE_WSDL_LOCATION = url;
        REPLICATORWSSERVICE_EXCEPTION = e;
    }

    public ReplicatorWSService() {
        super(__getWsdlLocation(), REPLICATORWSSERVICE_QNAME);
    }

    public ReplicatorWSService(WebServiceFeature... features) {
        super(__getWsdlLocation(), REPLICATORWSSERVICE_QNAME, features);
    }

    public ReplicatorWSService(URL wsdlLocation) {
        super(wsdlLocation, REPLICATORWSSERVICE_QNAME);
    }

    public ReplicatorWSService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, REPLICATORWSSERVICE_QNAME, features);
    }

    public ReplicatorWSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ReplicatorWSService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ReplicatorWS
     */
    @WebEndpoint(name = "ReplicatorWSPort")
    public ReplicatorWS getReplicatorWSPort() {
        return super.getPort(new QName("http://ws.eventos.servicios.sky.com.mx/", "ReplicatorWSPort"),
                             ReplicatorWS.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ReplicatorWS
     */
    @WebEndpoint(name = "ReplicatorWSPort")
    public ReplicatorWS getReplicatorWSPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.eventos.servicios.sky.com.mx/", "ReplicatorWSPort"),
                             ReplicatorWS.class, features);
    }

    private static URL __getWsdlLocation() {
        if (REPLICATORWSSERVICE_EXCEPTION != null) {
            throw REPLICATORWSSERVICE_EXCEPTION;
        }
        return REPLICATORWSSERVICE_WSDL_LOCATION;
    }

}
